6.2.2.2
-------

Security
========

This release addresses several critical CVEs.


:cve: `CVE-2021-34552`: Fix buffer overflow in Convert.c
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This release addresses :cve:`CVE-2021-34552`. PIL since 1.1.4 and Pillow since 1.0
allowed parameters passed into a convert function to trigger buffer overflow in
Convert.c.

:cve:`CVE-2021-25287`, :cve:`CVE-2021-25288`: Fix OOB read in Jpeg2KDecode
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* For J2k images with multiple bands, it's legal to have different widths for each band,
  e.g. 1 byte for ``L``, 4 bytes for ``A``.
* This dates to Pillow 2.4.0.

:cve:`CVE-2021-28675`: Fix DOS in PsdImagePlugin
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* :py:class:`.PsdImagePlugin.PsdImageFile` did not sanity check the number of input
  layers with regard to the size of the data block, this could lead to a
  denial-of-service on :py:meth:`~PIL.Image.open` prior to
  :py:meth:`~PIL.Image.Image.load`.
* This dates to the PIL fork.

:cve:`CVE-2021-28676`: Fix FLI DOS
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* ``FliDecode.c`` did not properly check that the block advance was non-zero,
  potentially leading to an infinite loop on load.
* This dates to the PIL fork.

:cve:`CVE-2021-28677`: Fix EPS DOS on _open
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* The readline used in EPS has to deal with any combination of ``\r`` and ``\n`` as line
  endings. It accidentally used a quadratic method of accumulating lines while looking
  for a line ending.
* A malicious EPS file could use this to perform a denial-of-service of Pillow in the
  open phase, before an image was accepted for opening.
* This dates to the PIL fork.

:cve:`CVE-2021-28678`: Fix BLP DOS
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* ``BlpImagePlugin`` did not properly check that reads after jumping to file offsets
  returned data. This could lead to a denial-of-service where the decoder could be run a
  large number of times on empty data.
* This dates to Pillow 5.1.0.

Fix memory DOS in ImageFont
^^^^^^^^^^^^^^^^^^^^^^^^^^^

* A corrupt or specially crafted TTF font could have font metrics that lead to
  unreasonably large sizes when rendering text in font. ``ImageFont.py`` did not check
  the image size before allocating memory for it.
* This dates to the PIL fork.
